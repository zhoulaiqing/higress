
//line xss_130.rl:1
package rule_941

func matchXSS130(data []byte) bool {

//line xss_130.rl:5

//line xss_130.go:10
var _xss130_actions []byte = []byte{
	0, 1, 0, 1, 1, 1, 5, 1, 6, 
	1, 7, 1, 8, 1, 9, 1, 10, 
	2, 2, 3, 2, 2, 4, 
}

var _xss130_key_offsets []byte = []byte{
	0, 15, 31, 47, 63, 64, 65, 66, 
	67, 68, 69, 70, 71, 72, 73, 74, 
	75, 76, 77, 78, 79, 80, 81, 82, 
	83, 84, 85, 86, 87, 88, 89, 90, 
	91, 92, 93, 94, 95, 96, 97, 98, 
	99, 116, 124, 127, 128, 129, 130, 131, 
	132, 133, 134, 135, 136, 137, 138, 139, 
	140, 141, 142, 143, 144, 145, 146, 147, 
	148, 151, 160, 163, 171, 181, 186, 187, 
	188, 189, 190, 191, 192, 193, 194, 195, 
	196, 203, 218, 
}

var _xss130_trans_keys []byte = []byte{
	33, 59, 64, 95, 100, 102, 104, 112, 
	120, 48, 57, 65, 90, 97, 122, 33, 
	59, 64, 95, 100, 101, 102, 104, 112, 
	120, 48, 57, 65, 90, 97, 122, 33, 
	59, 64, 95, 98, 100, 102, 104, 112, 
	120, 48, 57, 65, 90, 97, 122, 33, 
	59, 64, 95, 100, 102, 104, 105, 112, 
	120, 48, 57, 65, 90, 97, 122, 97, 
	116, 97, 58, 116, 101, 120, 116, 47, 
	104, 116, 109, 108, 111, 114, 109, 97, 
	99, 116, 105, 111, 110, 116, 116, 112, 
	109, 112, 111, 114, 116, 97, 116, 116, 
	101, 114, 110, 61, 9, 13, 32, 47, 
	48, 57, 58, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 61, 95, 48, 57, 
	65, 90, 97, 122, 104, 108, 109, 105, 
	110, 107, 58, 104, 114, 101, 102, 108, 
	110, 115, 97, 115, 101, 54, 52, 110, 
	116, 105, 116, 121, 32, 9, 13, 32, 
	37, 95, 9, 13, 65, 90, 97, 122, 
	32, 9, 13, 32, 95, 9, 13, 65, 
	90, 97, 122, 32, 95, 9, 13, 48, 
	57, 65, 90, 97, 122, 32, 112, 115, 
	9, 13, 117, 98, 108, 105, 99, 121, 
	115, 116, 101, 109, 95, 48, 57, 65, 
	90, 97, 122, 33, 59, 64, 95, 100, 
	102, 104, 112, 120, 48, 57, 65, 90, 
	97, 122, 61, 9, 13, 32, 47, 48, 
	57, 58, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 
}

var _xss130_single_lengths []byte = []byte{
	9, 10, 10, 10, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 3, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 3, 1, 2, 2, 3, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 9, 1, 
}

var _xss130_range_lengths []byte = []byte{
	3, 3, 3, 3, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	8, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 3, 1, 3, 4, 1, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 8, 
}

var _xss130_index_offsets []int16 = []int16{
	0, 13, 27, 41, 55, 57, 59, 61, 
	63, 65, 67, 69, 71, 73, 75, 77, 
	79, 81, 83, 85, 87, 89, 91, 93, 
	95, 97, 99, 101, 103, 105, 107, 109, 
	111, 113, 115, 117, 119, 121, 123, 125, 
	127, 137, 143, 147, 149, 151, 153, 155, 
	157, 159, 161, 163, 165, 167, 169, 171, 
	173, 175, 177, 179, 181, 183, 185, 187, 
	189, 192, 199, 202, 208, 215, 220, 222, 
	224, 226, 228, 230, 232, 234, 236, 238, 
	240, 245, 258, 
}

var _xss130_indicies []byte = []byte{
	2, 3, 4, 0, 5, 6, 7, 8, 
	9, 0, 0, 0, 1, 2, 3, 4, 
	0, 5, 10, 6, 7, 8, 9, 0, 
	0, 0, 1, 2, 3, 4, 0, 11, 
	5, 6, 7, 8, 9, 0, 0, 0, 
	1, 2, 3, 4, 0, 5, 6, 7, 
	12, 8, 9, 0, 0, 0, 1, 13, 
	0, 14, 0, 15, 0, 16, 0, 17, 
	0, 18, 0, 19, 0, 20, 0, 21, 
	0, 22, 0, 23, 0, 24, 0, 25, 
	0, 26, 0, 27, 0, 28, 0, 29, 
	0, 30, 0, 31, 0, 32, 0, 33, 
	0, 25, 0, 34, 0, 35, 0, 25, 
	0, 36, 0, 37, 0, 38, 0, 39, 
	0, 25, 0, 40, 0, 41, 0, 42, 
	0, 43, 0, 44, 0, 45, 0, 48, 
	45, 45, 47, 45, 47, 45, 47, 45, 
	46, 25, 47, 47, 47, 47, 46, 22, 
	49, 50, 0, 51, 0, 52, 0, 53, 
	0, 54, 0, 55, 0, 56, 0, 57, 
	0, 25, 0, 58, 0, 59, 0, 25, 
	0, 60, 0, 61, 0, 62, 0, 63, 
	0, 25, 0, 64, 0, 65, 0, 66, 
	0, 67, 0, 68, 0, 69, 69, 0, 
	69, 70, 71, 69, 71, 71, 0, 72, 
	72, 0, 72, 71, 72, 71, 71, 0, 
	73, 71, 73, 71, 71, 71, 0, 73, 
	74, 75, 73, 0, 76, 0, 77, 0, 
	78, 0, 79, 0, 25, 0, 80, 0, 
	81, 0, 82, 0, 83, 0, 25, 0, 
	85, 85, 85, 85, 84, 2, 3, 4, 
	86, 5, 6, 7, 8, 9, 86, 86, 
	86, 1, 48, 45, 45, 47, 45, 47, 
	45, 47, 45, 87, 
}

var _xss130_trans_targs []byte = []byte{
	80, 0, 1, 2, 3, 4, 17, 26, 
	34, 42, 59, 54, 29, 5, 6, 7, 
	8, 9, 10, 11, 12, 13, 14, 15, 
	16, 80, 18, 19, 20, 21, 22, 23, 
	24, 25, 27, 28, 30, 31, 32, 33, 
	35, 36, 37, 38, 39, 40, 80, 41, 
	82, 43, 51, 44, 45, 46, 47, 48, 
	49, 50, 52, 53, 55, 56, 57, 58, 
	60, 61, 62, 63, 64, 65, 66, 68, 
	67, 69, 70, 75, 71, 72, 73, 74, 
	76, 77, 78, 79, 81, 80, 80, 80, 
}

var _xss130_trans_actions []byte = []byte{
	13, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 15, 0, 
	17, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 20, 7, 11, 9, 
}

var _xss130_to_state_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	1, 0, 0, 
}

var _xss130_from_state_actions []byte = []byte{
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 0, 0, 
}

var _xss130_eof_trans []int16 = []int16{
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	47, 47, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	0, 87, 88, 
}

const xss130_start int = 80
const xss130_first_final int = 80
const xss130_error int = -1

const xss130_en_main int = 80


//line xss_130.rl:6
    cs, p, pe, eof := 0, 0, len(data), len(data)
        _ = eof

    var ts, te, act int
    _, _, _ = ts, te, act

    
//line xss_130.go:228
	{
	cs = xss130_start
	ts = 0
	te = 0
	act = 0
	}

//line xss_130.go:236
	{
	var _klen int
	var _trans int
	var _acts int
	var _nacts uint
	var _keys int
	if p == pe {
		goto _test_eof
	}
_resume:
	_acts = int(_xss130_from_state_actions[cs])
	_nacts = uint(_xss130_actions[_acts]); _acts++
	for ; _nacts > 0; _nacts-- {
		 _acts++
		switch _xss130_actions[_acts - 1] {
		case 1:
//line NONE:1
ts = p

//line xss_130.go:256
		}
	}

	_keys = int(_xss130_key_offsets[cs])
	_trans = int(_xss130_index_offsets[cs])

	_klen = int(_xss130_single_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + _klen - 1)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + ((_upper - _lower) >> 1)
			switch {
			case data[p] < _xss130_trans_keys[_mid]:
				_upper = _mid - 1
			case data[p] > _xss130_trans_keys[_mid]:
				_lower = _mid + 1
			default:
				_trans += int(_mid - int(_keys))
				goto _match
			}
		}
		_keys += _klen
		_trans += _klen
	}

	_klen = int(_xss130_range_lengths[cs])
	if _klen > 0 {
		_lower := int(_keys)
		var _mid int
		_upper := int(_keys + (_klen << 1) - 2)
		for {
			if _upper < _lower {
				break
			}

			_mid = _lower + (((_upper - _lower) >> 1) & ^1)
			switch {
			case data[p] < _xss130_trans_keys[_mid]:
				_upper = _mid - 2
			case data[p] > _xss130_trans_keys[_mid + 1]:
				_lower = _mid + 2
			default:
				_trans += int((_mid - int(_keys)) >> 1)
				goto _match
			}
		}
		_trans += _klen
	}

_match:
	_trans = int(_xss130_indicies[_trans])
_eof_trans:
	cs = int(_xss130_trans_targs[_trans])

	if _xss130_trans_actions[_trans] == 0 {
		goto _again
	}

	_acts = int(_xss130_trans_actions[_trans])
	_nacts = uint(_xss130_actions[_acts]); _acts++
	for ; _nacts > 0; _nacts-- {
		_acts++
		switch _xss130_actions[_acts-1] {
		case 2:
//line NONE:1
te = p+1

		case 3:
//line xss_130.rl:26
act = 1;
		case 4:
//line xss_130.rl:30
act = 2;
		case 5:
//line xss_130.rl:26
te = p+1
{
                return true
            }
		case 6:
//line xss_130.rl:30
te = p+1

		case 7:
//line xss_130.rl:26
te = p
p--
{
                return true
            }
		case 8:
//line xss_130.rl:30
te = p
p--

		case 9:
//line xss_130.rl:30
p = (te) - 1

		case 10:
//line NONE:1
	switch act {
	case 1:
	{p = (te) - 1

                return true
            }
	default:
	{p = (te) - 1
}
	}
	
//line xss_130.go:375
		}
	}

_again:
	_acts = int(_xss130_to_state_actions[cs])
	_nacts = uint(_xss130_actions[_acts]); _acts++
	for ; _nacts > 0; _nacts-- {
		_acts++
		switch _xss130_actions[_acts-1] {
		case 0:
//line NONE:1
ts = 0

//line xss_130.go:389
		}
	}

	p++
	if p != pe {
		goto _resume
	}
	_test_eof: {}
	if p == eof {
		if _xss130_eof_trans[cs] > 0 {
			_trans = int(_xss130_eof_trans[cs] - 1)
			goto _eof_trans
		}
	}

	}

//line xss_130.rl:35

        return false
}
